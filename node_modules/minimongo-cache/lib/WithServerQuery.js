var WithServerQuery, _;

_ = require('lodash');

WithServerQuery = {
  createServerQuery: function(spec) {
    var ServerQuery, db;
    if (spec.query == null) {
      throw new Error('You must pass a query method');
    }
    if (spec.fetchIfNeeded == null) {
      throw new Error('You must pass a fetchIfNeeded method');
    }
    db = this;
    ServerQuery = (function() {
      function ServerQuery(args) {
        this.args = args;
      }

      ServerQuery.prototype.observe = function() {
        var rv;
        this.fetchIfNeeded();
        rv = db.observe((function(_this) {
          return function() {
            return _this.query();
          };
        })(this));
        return rv.subscribe(this.fetchIfNeeded.bind(this));
      };

      return ServerQuery;

    })();
    _.mixin(ServerQuery.prototype, spec);
    return function(args) {
      var serverQuery;
      serverQuery = new ServerQuery(args);
      return serverQuery.observe();
    };
  }
};

module.exports = WithServerQuery;
